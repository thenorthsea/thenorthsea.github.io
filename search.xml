<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[blog_title]]></title>
    <url>%2F2018%2F10%2F22%2Fblog-title%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[Markdown文件中优雅地引用图片]]></title>
    <url>%2F2018%2F10%2F22%2F%E4%BD%BF%E7%94%A8Typora%E7%BC%96%E8%BE%91hexo%E7%9A%84Markdown%E6%96%87%E4%BB%B6%E6%97%B6%E5%BC%95%E7%94%A8%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[Hexo 图片引用 参考 Hexo 官方指南#资源文件夹 ① 为方便管理图片，每篇博客生成一个和 Markdown 文件同名的目录。 首先，要打开根目录下配置属性 post_asset_folder： 文件位置：~/blog/_config.yml1post_asset_folder: true 然后，使用 hexo 命令来创建新的博文： 1hexo new post &quot;blog_title&quot; 在 ~/blog/sources/_post 目录下就会生成 blog_title 文件夹和同名的 Markdown 文件。 ② Markdown 文件中需要的本地图片拷贝到同名文件夹中，通过图片名就可以引用，hexo g 之后生成的网页 index.html 和图片文件将在同一文件夹中，可以正常显示图片。 ③ 我们使用 Typora 向 Markdown 文件中插入图片： 图片复制完成后，Typora 会提示是否保存到文件夹，我们选择保存到文件夹 blog-title。但是此时生成的网页文件无法显示图片，我们需要把图片的路径修改为 FreshSalt.jpg 。但这时 Typora 又会显示： 为此，我们需要修改 Typora 的图片的根目录为 blog-title 文件夹，点击按钮 编辑 -&gt; 图片工具 -&gt; 设置图片根目录。最终在 Markdown 文件的 Front-matter 中会添加一行： 12345678910---title: blog_titletags: []date: 2018-10-22 23:06:01permalink:categories:description:image:+ typora-root-url: blog-title--- 源码如下：123456789101112131415---title: blog_titletags: []date: 2018-10-22 23:06:01permalink:categories:typora-root-url: blog-title---&lt;p class="description"&gt;&lt;/p&gt;&lt;!-- more --&gt;![](FreshSalt.jpg)&lt;hr /&gt; ④ hexo g 生成网页文件如下，大功告成，好好开心吧！ 注意 ：1. 在设置图片根目录 typora-root-url: blog-title 之后，再复制图片，默认打开此文件夹，而且路径之前有 / 需要手动删除。2. 在网页中引用图片的方式是相对路径，所以以上所说的方式只适用于博客的非摘要部分，需要放在 &lt;!--more--&gt; 之后，否则在博客主页的博文摘要上无法显示图片。]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的网站的搭建配置]]></title>
    <url>%2F2018%2F10%2F17%2F%E6%AD%A4%E7%BD%91%E7%AB%99%E7%9A%84%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[我的这个网站使用 Github Page + hexo 搭建的，使用了 NexT 的主题。更多的个性化设置将在下文介绍。 域名 https 支持 参考了 Github 官方博客 Custom domains on GitHub Pages gain support for HTTPS(2018/5/1) 总结步骤： ① 在域名解析商添加解析到 username.github.io 的 CNAME 记录，等待解析完成 ② 在 hexo 博客 sources 文件夹下添加 CNAME 文件，内容为你的域名 文件位置：~/blog/sources/CNAMElink1thenorthsea.cn ③ 进入 GitHub 博客所在的 repository，点击 Settings ，勾选 GitHub Page 章节下的 Enforce HTTPS 按钮 设置网站背景首先，选择你的背景图片，放在根目录下的 themes/next/source/images/background.jpg。 然后，工程目录下的 themes/next/source/css/_custom/coustom.styl 文件添加代码: 123456789101112131415// Custom styles.@media screen and (min-width:1200px) &#123; body &#123; background-image:url(/images/background.jpg); background-repeat: no-repeat; background-attachment:fixed; background-position:50% 50%; background-size: cover; &#125; #footer a &#123; color:#eee; &#125;&#125; 评论功能：LiveRe (正在使用) 参考自 网易云跟帖关闭服务后转移到来必力 注册 LiveRe 账号 新建项目，获得 ID 将 ID 填写到 NexT 主题配置文件 valine 参考自 为你的Hexo加上评论系统-Valine 步骤总结为： 注册 LeanCloud，新建应用，获得 appid 和 appkey 编辑主题配置文件 LeanCloud 安全中心中添加 Web 安全域名 NOTE： 注意 next 主题的 _config.yml 配置文件中是 app_id 还是 appid，app_key 还是 appkey，不同版本中不同。 文章阅读统计： leancloud 参考了 Hexo博客-NexT主题：使用leancloud进行页面访客统计 步骤总结为： 配置 LeanCloud 获取 appid 和 appkey，创建 Counter 配置 Hexo LeanCloud 安全中心中添加 Web 安全域名 搜索功能： Local Search 参考了 Local Search 步骤总结为： 安装 hexo-generator-searchdb 编译站点配置文件 编辑主题配置文件 文章置顶 参考了 大佬 @reuixiy 的博客 NexT 主题默认的功能有 bugs，需要做一些修改： 移除默认安装的插件 1npm uninstall hexo-generator-index --save 安装新插件 1npm install hexo-generator-index-pin-top --save 在需要指定的文章的 Front-matter 加属性 top: 2，数值越大置顶越高 写作样式FontAwesome 图标FontAwesome 样式可以直接在 markdown 文件中使用。下面给出一些例子，更多请看官网的使用示例。 123456&lt;i class="fa fa-pencil" aria-hidden="true"&gt;&lt;/i&gt; 铅笔&lt;i class="fa fa-car" aria-hidden="true"&gt;&lt;/i&gt; 汽车&lt;i class="fa fa-coffee" aria-hidden="true"&gt;&lt;/i&gt; 咖啡&lt;i class="fa fa-cube" aria-hidden="true"&gt;&lt;/i&gt; 立方&lt;i class="fa fa-cube fa-lg" aria-hidden="true"&gt;&lt;/i&gt; 立方 放大 33%&lt;i class="fa fa-cube fa-2x" aria-hidden="true"&gt;&lt;/i&gt; 立方 两倍大 铅笔 汽车 咖啡 立方 立方 放大 33% 立方 两倍大 代码块的标题设置12345678​```diff 文件位置：~/blog/_config.ymlhighlight: enable: true line_number: true# 代码自动高亮- auto_detect: false+ auto_detect: true​``` 文件位置：~/blog/_config.yml123456highlight: enable: true line_number: true# 代码自动高亮- auto_detect: false+ auto_detect: true NexT 主题自带的 note 样式标签 参考自 Next 官方文档：内建标签#BC 123&lt;div class="note class_name"&gt;&lt;p&gt;Content (md partial supported)&lt;/p&gt;&lt;/div&gt;// or&#123;% note class_name %&#125; Content (md partial supported) &#123;% endnote %&#125; class_name 支持以下 6 种： default primary success info warning danger defaultprimarysuccessinfowarningdangerdanger danger no-icon NexT 文本居中的引用样式 参考自 Next 官方文档：内建标签#文本居中 示例： 123&#123;% cq %&#125;北冥有鱼，其名为鲲；化而为鸟，其名为鹏。&#123;% endcq %&#125; 北冥有鱼，其名为鲲；化而为鸟，其名为鹏。 NexT 超宽图片 参考自 NexT 官方文档：内置标签#超宽图片 1234&#123;% fi /images/theNorthSea.jpg, 北冥, "北冥有鱼，其名为鲲；化而为鸟，其名为鹏" %&#125;// 或者采用 HTML 来写&lt;img src="/images/theNorthSea.jpg" class="full-image" /&gt; 大佬的优化参考（强烈推荐阅读） 打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化 2017年最新基于hexo搭建个人免费博客——自定义页面样式一]]></content>
      <categories>
        <category>网站搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[facts & opinions]]></title>
    <url>%2F2018%2F10%2F17%2FBBC%20skillswise%2F</url>
    <content type="text"><![CDATA[事实（facts）是真实的，可以被证实。 观点（opinion）是你认为的或你相信的。无法被证明正确或错误。 例如 1： It’s is always a good idea to learn another language as peple in other countries are more friendly if you speak their language. 这是一个基于另一个观点的观点。有人觉得学外语很有用，但是很难证明其它国家的人会对说他们母语的人更友好这个陈述。 例 2： Girls do better than boys at GCSE. 这是可以用数据来证明是对，属于事实。在 BBC 新闻中可以发现，2011 年女学生继续在考试成绩上打败男学生。GCSE 成绩中，72.6% 的女生至少是 C，而男生的数据是 65.4%。 例 3： Global Warming means the earth is getting hotter. 事实。尽管有人会判断这是观点，但大量科学数据证明世界正在变暖。 例 4: Global Warming will mean the end of life on earth eventually. 观点。尽管地球在变暖，但我们没有足够证据来判断这意味将来会怎样。我们只能做一些猜测，属于观点。 例 5： 阅读一个材料： Owen said: “When I meet Newcastle or Liverpool fans they all respect what I’ve done for their clubs. In stadiums it changes, one boo and the rest follow.” 这一段出现了几个观点： Newcastle 或 Liverpool 的球迷尊重他所做的。（有些可能，但是所有人都是吗，这要怎么才能证明？） 一个球迷发嘘声，其他人跟风。（看起来是这样，但这要怎么才能证明？） 例 6： Many innocent people are killed in war. 事实。 例 7： I think public opinion will change over time. 这是一些人的观点，公众观点可能会随时间变化，也可能不会。我们需要拭目以待。 知识点 1：观点和事实的措辞我们如何区分事实和观点呢? 一个方式是看陈述使用的措辞。措辞可以帮我们决定，陈述是不是有证据支撑，可以被证实；或者只是某人的观点，判断和信念。 表达事实的措辞： This view has demonstrated … According to the results of the latest poll … The latest findings confirm … Researchers have recently discovered … 表达观点的措辞： The company claims that … The research tean argues that … In Professor Donald’s view … Most experts in this field suspect that… 注意： 事实和观点可以被操纵。通过使用事实的措辞，观点可以表达得像是事实。例如： Recent statements made by the council confirm that most residents do not want a further expansion of the one-way system of streets. 国会可能声明要增加单行道数量，但是这不意味着对当地居民进行了问卷调研。 知识点 2：什么是事实，什么是观点？什么是事实？ 事实（facts）可以被核实，有证据支撑。例如，2010 年，Lionel Messi 得到 FIFA World Footballer of The Year 称号。我们可以查阅 FIFA 的记录来核实。 事实经常与 reaserch 和 study 结合。比如人口普查的数据可以支撑这些事实：根据英国政府 2004 年的国家数据，英国16 岁以下的人口占比大约为五分之一 。 什么是观点？ 观点基于信念或立场。不基于可核实的证据。例如，Wayne Rooney 是英超联赛中最好的足球运动员。有人可能认为另外一个球员比 Wayne Rooney 表现得更出色。 观点可以在一些写作类型中找到，如报纸的“致编辑信”。一个读者的观点是“24 小时酒吧许可会毁了我们的社区”，另一个读者可能不同意，“24 小时酒吧许可错开了打烊时间，可以阻止流氓行为”。 混合 作者们常常混合使用事实和观点。因此在阅读时，采用问题意识（questioning mind）很重要。某人说是真的，不意味这就是真的。 例 8： Mr Tejpal said: “ A good book in india will sell only a few thousand copies; in the UK or US it could sell tens of thousands.” 这是事实。这个信息可以被核实，通过查阅这几个国家的畅销书销售数据。 练习，以维基百科中文条目“武汉”为例： 武汉市（普通话拼音：Wǔhàn Shì；武汉话拼音：Wǔhán Sì），简称“汉”，别称“江城、东方芝加哥”，中国超大城市[6][7]和国家中心城市[8][9]之一，湖北省省会、副省级城市[10]，中国中部暨长江中游地区第一大城市，也是中部地区的政治、经济、金融、商业、物流、科技、文化、教育中心及交通、通信枢纽[11]，国家历史文化名城[12]，有“九省通衢”的美誉。 武汉是中国经济地理中心，中国三大“内河航运中心”之一，也是中国客运量最大的铁路枢纽和航空、公路枢纽之一。“黄金水道”长江及其最大支流汉水横贯市区，将武汉一分为三，形成了武昌、汉口、汉阳三块区域隔江鼎立的格局，史上统称之为“武汉三镇”。 国家中心城市这一事实，采用了“中国网”澎湃新闻的报道，及其内部引用的国家发展改革委关于印发促进中部地区崛起“十三五”规划的通知。]]></content>
      <categories>
        <category>facts &amp; opinions</category>
      </categories>
  </entry>
</search>
